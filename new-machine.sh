#!/bin/bash

# Define colors...
RED=`tput bold && tput setaf 1`
GREEN=`tput bold && tput setaf 2`
YELLOW=`tput bold && tput setaf 3`
BLUE=`tput bold && tput setaf 4`
NC=`tput sgr0`

function RED(){
	echo -e "\n${RED}${1}${NC}"
}
function GREEN(){
	echo -e "\n${GREEN}${1}${NC}"
}
function YELLOW(){
	echo -e "\n${YELLOW}${1}${NC}"
}
function BLUE(){
	echo -e "\n${BLUE}${1}${NC}"
}

# Testing if root...
if [ $UID -ne 0 ]
then
	RED "You must run this script as root!" && echo
	exit
fi

YELLOW "=== SYSTEM ESSENTIALS ==="
BLUE "Updating repositories..."
sudo apt update

BLUE "Installing git..."
sudo apt install -y git

BLUE "Forcing a color prompt in ~/.bashrc..."
grep "export PS1" ~/.bashrc
if [ $? -eq 1 ]
then
	echo "export PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '" >> ~/.bashrc
fi

BLUE "Installing curl..."
sudo apt-get install -y curl

BLUE "Installing xclip..."
sudo apt install -y xclip
grep "alias xclip" ~/.bashrc
if [ $? -eq 1 ]
then
	echo "alias xclip='xclip -selection clipboard'" >> ~/.bashrc
fi

BLUE "Installing Plocate..." 
sudo apt install -y plocate

BLUE "Installing unrar..."
sudo apt install -y unrar

YELLOW "=== PYTHON STUFF ==="

BLUE "Installing pip3..."
sudo apt-get install -y python3-pip

BLUE "Installing Python2..."
sudo apt install -y python2

BLUE "Installing pip2..."
sudo add-apt-repository universe
sudo apt update
curl https://bootstrap.pypa.io/get-pip.py --output get-pip.py
sudo python2 get-pip.py
hash -r

BLUE "Adding PIP to PATH..."
grep "export PIP" ~/.bashrc
if [ $? -eq 1 ]
then
	echo "export PIP=\$HOME/.local/bin" >> ~/.bashrc
	echo "export PATH=\$PATH:\$PIP" >> ~/.bashrc
fi

BLUE "Installing Python3 VENV..."
sudo apt install -y python3.10-venv

BLUE "Installing python-requests..."
pip install requests
pip3 install requests

BLUE "Installing Python pwntools..."
sudo apt install -y python3 python3-pip python3-dev git libssl-dev libffi-dev build-essential
pip install pwntools
pip3 install pwntools

YELLOW "=== GOLANG ==="

BLUE "Installing Go..."
sudo apt install -y golang-go

BLUE "Adding GOPATH and GOBIN to .bashrc, so future installs are easy.."
grep "export GOPATH" ~/.bashrc
if [ $? -eq 1 ]
then
	echo "export GOPATH=\$HOME/go/" >> ~/.bashrc
fi
grep "export GOBIN" ~/.bashrc
if [ $? -eq 1 ]
then
	echo "export GOBIN=\$HOME/go/bin" >> ~/.bashrc
	echo "export PATH=\$PATH:\$GOBIN" >> ~/.bashrc
fi

YELLOW "=== PENTEST AND CTF TOOLS ==="

BLUE "Installing Gobuster..."
go install github.com/OJ/gobuster/v3@latest

BLUE "Installing openvpn..."
sudo apt-get install -y openvpn

BLUE "Installing Wireshark..."
sudo apt-get install -y wireshark

BLUE "Installing sqlitebrowser..."
sudo apt-get install -y sqlitebrowser

BLUE "Installing Crackmapexec...(using PIPX)"
python3 -m pip install --user pipx
pipx ensurepath
pipx install crackmapexec
echo 'export PATH=~/.local/bin:$PATH' >> ~/.bashrc

BLUE "Installing exiftool..."
sudo apt-get install -y exiftool

BLUE "Installing Binwalk..."
sudo apt install -y binwalk

BLUE "Installing hexedit..."
sudo apt install -y hexedit	

BLUE "Installing Nmap..."
sudo apt install -y nmap

BLUE "Installing SqlMap..."
sudo apt install -y sqlmap

BLUE "Installing sqlite..."
sudo apt install -y sqlite	

BLUE "Installing nikto..."
sudo apt install -y nikto

BLUE "Installing qrencode..."
sudo apt install -y qrencode

BLUE "Installing Oracle Java 8..."
echo "" | sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install -y oracle-java8-installer

BLUE "Downloading stegsolve.jar..."
wget "http://www.caesum.com/handbook/Stegsolve.jar" -O "stegsolve.jar"
chmod +x "stegsolve.jar"
sudo mv stegsolve.jar /opt

BLUE "Installing steghide..."
sudo apt install -y steghide

BLUE "Installing cmake..."
sudo apt install -y cmake

BLUE "Installing the thing that 7z2john.pl needs..."
sudo apt install -y libcompress-raw-lzma-perl 

BLUE "Installing dos2unix..."
sudo apt install dos2unix

BLUE "Downloading Windows Binaries for pentesters to /opt..."
sudo git clone https://gitlab.com/kalilinux/packages/windows-binaries.git /opt/windows-binaries

BLUE "Downloading Nishang Powershell scripts to /opt..."
sudo git clone https://github.com/samratashok/nishang.git /opt/nishang

BLUE "Downloading P0wnyShell PHP-revshell to /opt..."
sudo git clone https://github.com/flozz/p0wny-shell.git /opt/p0wnyshell

BLUE "Installing WPScan..."
sudo gem install wpscan

BLUE "Installing Wfuzz..."
sudo apt install -y wfuzz

BLUE "Installing Metasploit..."
sudo apt install -y build-essential zlib1g zlib1g-dev libpq-dev libpcap-dev libsqlite3-dev ruby ruby-dev
cd /tmp
curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall
chmod +x msfinstall
sudo ./msfinstall
su - `logname` -c "echo no | msfconsole -qx 'db_disconnect --clear; exit'"
su - `logname` -c "msfdb init --component database"
msfconsole -x "db_connect msf@msf"

BLUE "Installing Ghidra..."
sudo apt install default-jre
sudo apt install openjdk-11-jdk
sudo apt install openjdk-11-jre
cd ~/Downloads/
wget https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_10.1.2_build/ghidra_10.1.2_PUBLIC_20220125.zip
unzip ghidra_10.1.2_PUBLIC_20220125.zip
rm ghidra_10.1.2_PUBLIC_20220125.zip

BLUE "Installing VSCodium..."
wget -qO - https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg \ | gpg --dearmor \ | sudo dd of=/usr/share/keyrings/vscodium-archive-keyring.gpg
echo 'deb [ signed-by=/usr/share/keyrings/vscodium-archive-keyring.gpg ] https://download.vscodium.com/debs vscodium main' | sudo tee /etc/apt/sources.list.d/vscodium.list
sudo apt update
sudo apt install codium

BLUE "Installing Smbclient and SmbMap..."
sudo apt install -y smbclient
sudo apt install -y smbmap

BLUE "Installing Impacket..."
sudo git clone https://github.com/SecureAuthCorp/impacket.git /opt/impacket
sudo pip3 install -r /opt/impacket/requirements.txt
sudo python3 /opt/impacket/setup.py install

BLUE "Installing Ldapsearch..."
sudo apt install -y ldap-utils

BLUE "Installing Snmpwalk..."
sudo apt install -y snmp

BLUE "Installing Snmpcheck to /opt..."
sudo wget https://gitlab.com/kalilinux/packages/snmpcheck/-/raw/kali/master/snmpcheck-1.9.rb -O /opt/snmpcheck

BLUE "Installing Evil-Winrm..."
sudo gem install evil-winrm

YELLOW "=== CRACKING TOOLS ==="

BLUE "Installing Hydra..."
sudo apt install -y hydra

BLUE "Installing pdfcrack..."
sudo apt install -y pdfcrack

BLUE "Installing fcrackzip..."
sudo apt install -y fcrackzip

BLUE "Installing hashcat..."
sudo apt install -y hashcat

BLUE "Installing Search-That-Hash..." 
pip3 install search-that-hash

BLUE "Installing johntheripper from Github to /opt..."
sudo git clone https://github.com/openwall/john -b bleeding-jumbo /opt/john
cd /opt/john/src/
sudo ./configure
sudo make -s clean && sudo make -sj4

BLUE "Installing SecLists..."
sudo git clone https://github.com/danielmiessler/SecLists.git /opt/seclists

BLUE "Installing GDB..."
sudo apt install -y gdb

BLUE "Installing Pwndbg..."
sudo git clone https://github.com/pwndbg/pwndbg /opt/pwndbg
cd /opt/pwndbg
./setup.sh

BLUE "Installing PwnCat..."
python3 -m venv pwncat-env
source pwncat-env/bin/activate
pip3 install pwncat-cs

YELLOW "=== MANUAL INSTALL ==="

BLUE "You need to manually install BURP..."
echo 'Go to https://portswigger.net/burp/releases'

BLUE "You need to manually install Obsidian..."
echo 'Go to https://obsidian.md/'

source ~/.bashrc

GREEN "=== DONE! ==="
